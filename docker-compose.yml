x-postgres: &postgres-environments
  POSTGRES__USER: ${POSTGRES__USER}
  POSTGRES__PASSWORD: ${POSTGRES__PASSWORD}
  POSTGRES__DB: ${POSTGRES__DB}
  POSTGRES__HOST: "postgres_container"

x-debug: &debug-environments
  DEBUG: True

x-rabbit: &rabbit-environments
  RABBITMQ__USER: ${RABBITMQ__USER}
  RABBITMQ__PASSWORD: ${RABBITMQ__PASSWORD}
  RABBITMQ__SERVER: rabbitmq

version: '3.5'
services:
  admin:
    env_file:
      - .env
    expose:
      - "8000"
    container_name: django
    environment:
      <<: *postgres-environments
      <<: *debug-environments
      SECRET_KEY: ${SECRET_KEY}
    networks:
      - movies
    depends_on:
      - postgres
    volumes:
      - ./admin_panel/static/:/var/www/static:ro
    build: ./admin_panel/

  billing:
    container_name: billing
    image: billing
    networks:
      - movies
    environment:
      <<: *postgres-environments
      <<: *debug-environments
      <<: *rabbit-environments
    depends_on:
      - postgres
      - rabbitmq
      - redis

  postgres:
    container_name: postgres_container
    env_file:
      - .env
    image: postgres:13
    environment:
      POSTGRES_USER: ${POSTGRES__USER}
      POSTGRES_PASSWORD: ${POSTGRES__PASSWORD}
      POSTGRES_DB: ${POSTGRES__DB}
      PGDATA: /data/postgres
    volumes:
       - postgres:/data/postgres
       - ./sql/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
    networks:
      - movies
    restart: unless-stopped

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.11.8-management
    hostname: rabbitmq
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ__USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ__PASSWORD}
    networks:
      - movies

  redis:
    container_name: redis
    image: 'bitnami/redis:latest'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - movies

volumes:
    postgres:
      name: graduate_project_postgres
    pgadmin:

networks:
  movies:
    driver: bridge